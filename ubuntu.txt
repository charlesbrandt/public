Ubuntu / Xubuntu
============================

Initially, it is a good idea to develop the following steps on a *live* or *virtual* instance in case you install something you didn't mean to.  Eventually things should stabilize enough that you can skip to the locally installed instance and go from there.


Try using 32bit os on virtual machines... sounds like that is more efficient from a memory stand point... shouldn't need to go over 4gb of ram in a VM anyway.


When creating a virtual machine in virtual box, I specify the OS type, version and bit type. I start with 2048MB of memory... this is easy to adjust later on. For the hard disk file type, choose VMDK (Virtual Machine Disk). This is VMWare's format, but it sounds very cross-platform. Also may help with backups, and split the disk image into smaller sizes... all great features! Go with dynamically allocated, and then you'll also have the option to split files. 16GB is a good place to start. (6.4GB minimum needed for Xubuntu). Trying out encrypting home folder for virtual... may not apply to anything in /c.

If installing to a virtual machine, avoid allowing the installation to download and apply updates automatically. Disconnect from the internet. To be sure: Virtual Box -> Devices -> Network -> Disconnect Cable. That way you can apply the updates whenever you want to clone and re-run the setup scripts.

Consider implications of using LVM with disks

When the VM is powered off, add another network interface:
#Virtual Box -> Devices -> Network -> Network Settings...
Adapter 2 -> Enable Network Adapter
Attached to: Host-only Adapter
Name: vboxnet0

Devices -> Shared Clipboard -> Bidirectional

If you encrypted your home drive, it may be a good idea to jot down the key shown with "ecryptfs-unwrap-passphrase"

#Virtual Box -> Devices -> Insert Guest Additions CD image... -> Download
#http://askubuntu.com/questions/451805/screen-resolution-problem-with-ubuntu-14-04-and-virtualbox
On Guest:
cd /media/{{ ssh_user }}/VBOXADDITIONS_5.0.8_103449/
cd /media/charles/VBOXADDITIONS_5.0.10_104061/
sudo ./VBoxLinuxAdditions.run

Eject Guest Additions form guest OS file browser

#restart Guest OS
#can now resize screen too

#can do this sooner, but it won't work until now:
enable clipboard sharing, bidirectional.

#this requires proprietary oracle guest additions:
Virtual Box -> Devices -> Shared Folders -> Shared Folders Settings... -> Add icon
Choose "Folder Path": /c

If you might want access to DATA drives, set that up as well


If running linux on apple hardware (e.g. macbooks) you may need to swap the command key with the alt key to work as expected. Additionally, if running a linux VM on mac hardware using VirtualBox, you may need to first adjust the Host Key Combination from "Left Command" to "Right Command" (via Input -> Keyboard).
Then, use xev command to see the keys (keycode 133 == Super_L, want to swap with keycode 64 == Alt_L)
vi modmap.file

keycode 64 = Alt_L
keycode 133 = Super_L
remove Mod1 = Alt_L
remove Mod4 = Super_L
add Mod1 = Super_L
add Mod4 = Alt_L

xmodmap -v modmap.file
#worked for me, then move so it runs by default (this does not run in Xfce):
mv modmap.file ~/.xmodmaprc
#this does not run by default, so add a startup item (Settings->Session and Startup):
/bin/bash -c "sleep 20; /usr/bin/xmodmap /home/$USER/.xmodmaprc"

#this may also work if running linux natively on apple hardware (not in VM):
echo "1" > /sys/module/hid\_apple/parameters/swap\_opt\_cmd
#solution via:
http://unix.stackexchange.com/questions/86933/swap-alt-and-super
https://wiki.xfce.org/faq

Another setting that helps with scrolling on macs is (when guest is powered off), in VirtualBox->Machine->Settings->System->Motherboard->Pointing Device
set it to: "PS/2 Mouse"



There are some general system settings that are good to take care of first: 

Set clock, including time format. Enable Date and Month in menu bar.
%a, *%Y.%m.%d %H:%M

For multiple monitors, configure them in Settings -> Display

Change Desktop background / wallpaper.
Right click -> Desktop Settings... ->
Style: None
#7C7C7C ! (or lighter: #C7C7C7)

#if you choose a picture here, it will show up on the login screen!

*2013.05.14 20:14:59 
move window actions ("minimize", "close", etc) to a different position:
Settings Manager->Windows Manager
under the Style tab, change "Button layout"
X + _ Title v

*2015.11.05 22:32:00 
Start->Settings Manager->Window Manager
Under the "Keyboard" tab, clear the window operations menu setting

Then, under All Settings -> Keyboard settings -> Application Shortcuts find:
xfce4-popup-whiskermenu
and set that to Alt+Space

Create a new shortcut ("+Add") with the command 'xflock4', and the shortcut "Shift+Ctrl+Delete"
This is to be more in line with the way lock screen works on Macs, but unfortunately Macs are not as configurable

*2015.11.03 09:57:37
Add workspaces
Settings -> Workspaces (start with 4)

Optionally, add workspace switcher to Panel
Settings -> Panel -> Items -> Add (right icon) -> Workspace Switcher (bottom of list)

*2015.11.22 12:29:31 terminal
only a subtle tweak has been required...
setting background to be the same color as emacs:
Change terminal profile settings"
"Edit"->"Profile Preferences..."
Under "Colors" tab,
For "Background color", use color picker to match emacs setting (#1D1F21)

*2015.11.07 15:18:05
be sure a Terminal is already open, then:
Settings -> Session and Startup -> Session -> Save Session

#server installs can skip much of the above


#set up a shared directory with all machines. I use /c... use anything you like
#export SHARED=/c
sudo mkdir -p /c
sudo chmod 775 /c

Drag link to /c in File Manager

sudo chown -R charles: /c
#this is handled by ansible/shares.yml
#skip if running that
sudo chown -R {{ ssh_user }}: /c
sudo mount -t vboxsf -o uid=1000,gid=1000 c /c
#consider adding this to fstab!
#http://askubuntu.com/questions/481559/how-to-automatically-mount-a-folder-and-change-ownership-from-root-in-virtualbox
# http://askubuntu.com/questions/252853/how-to-mount-a-virtualbox-shared-folder-at-startup#252865


# shut down, take a snapshot:
Base Install, GUI Configs





Connect to a network. (Wireless, Wired, your choice!)
May need to press "Auto Etherenet" for wired connection

Add "Incomplete Language Support"


#sshd
#just get this one... will help with remote / automated installations
sudo apt-get update
sudo apt-get -y install openssh-server

ifconfig
#to find out ip on guest
#ssh from host to guest first to test (sometimes old keys left around)
ssh 192.168.56.103

if you haven't already, generate local keys:
    ssh-keygen -t rsa

#on host, use ssh-copy-id to log in automatically, e.g.:
ssh-copy-id 192.168.56.103

ssh 127.0.0.1
ssh-copy-id 127.0.0.1



#for a host OS instance, a few steps need to be done manually: 

sudo apt-get install -y python-pip python2.7-dev 
#ansible
sudo pip install ansible markupsafe



#(optionally, on guests) shutdown, one more snapshot:
SSH Config


#should be able to use ansible from here
cd /c/public/system/ansible 
add new machine ip to hosts.txt
ansible-playbook system.yml -i hosts.txt --ask-become-pass




#don't forget these manual steps:

launch Software Updater
Settings... -> Automatically check for updates: Every two weeks, (Never?)
(depends on the use case)

#apply browser configurations sooner rather than later
#this way they'll be available for snapshots in virtual machines

#either from scratch (see browsers.txt)
#then copy browser settings for future installs:
cp -r ~/.mozilla $ARCHIVEPATH/.mozilla
cp -r ~/.mozilla /c/public/downloads/.mozilla

#or copy previous:
#cp -r /c/public/downloads/.mozilla ~/



#GitHub:

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

#or
  cp /c/charles/.gitconfig ~/.gitconfig



#back up downloaded files, if you want
rsync -av /home/charles/Downloads/ubuntu/ /c/public/downloads/ubuntu-20151213

#to save space, you can clean up downloaded .deb files, however...
#keep downloaded directories around...
#they're used as checks by ansible to see if actions are required
#to save space and clean up downloaded files:

sudo find ~/Downloads/ubuntu/* -iname "*.deb" -exec rm \{\} \;


# Open VLC
# Tools -> Preferences
# Uncheck:
#   - Integrate video in interface
#   - Use only one instance when started from file manager

# View -> Playlist
# Close browser tree in playlist view.
# Uncheck "Docked Playlist




#Snapshot here

Base Configuration

Includes:
 - manual configurations
 - ansible configurations (up to media)
 - updates




#virtualbox 
----------------------------------------------
mkdir -p /c/virtual_box/
cd /c/virtual_box/

I have found the version from Oracle to be easier to use. They are also more up to date. Yes, some aspects are not open, but I feel comfortable enough having the open version available. 

Download both platform package and Extension Pack. 
https://www.virtualbox.org/wiki/Downloads

cd /c/virtual_box/installs/5.0.10/
sudo dpkg -i virtualbox-5.0_5.0.10-104061~Ubuntu~wily_amd64.deb

#In preferences:
File->Preferences...->Network->Host-only Networks->Add icon (right)->vboxnet0

#Add Extension Pack
File->Preferences...->Extensions

#change Default Machine Folder to be:
/c/virtual_box/

#or external drive:
/media/charles/DATA/virtual_box

It worked to boot directly from external drive (may be slower than host)...
If you use an image often, it would be good to keep it local






#SAVE THIS FILE!

cd $USBPATH/technical
hg stat
hg add
hg ci -m "updates for new ubuntu system installation"
hg clone $USBPATH/technical $LOCALPATH/technical
cd $LOCALPATH/technical/system
python /c/mindstream/mindstream/launch.py -c /c/technical system




#If on a system with multiple operating systems, but you don't want
#ubuntu to be the default operating system, install startup manager:
sudo apt-get install -y -d startupmanager
mkdir startupmanager
sudo mv /var/cache/apt/archives/*.deb startupmanager
#remember to run startup manager after installation and choose the correct operating system


#now is a good time to run startup.sh
#additional pip python package installs located there (requires network still)


