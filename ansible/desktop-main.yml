- hosts: desktop
  remote_user: charles
  become: yes

  vars_files:
    - shari_vari.yml
    
  tasks:
    #these are only necessary for a desktop / root machine...
    
    #shouldn't need to create linux usbs in a virtual machine
    - name: Install host specific utilites
      action: apt pkg={{ item }} state=present
      with_items:
        #requires qt
        - unetbootin

    # an alternative to unetbootin is etcher:
    # https://etcher.io/
    # does not appear to be available via apt-get on ubuntu by default
    # but it is possible to add:
    # https://github.com/resin-io/etcher#debian-and-ubuntu-based-package-repository-gnulinux-x86x64
    #echo "deb https://dl.bintray.com/resin-io/debian stable etcher" | sudo tee /etc/apt/sources.list.d/etcher.list
    #sudo apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 379CE192D401AB61
    #
    #sudo apt-get update
    #sudo apt-get install etcher-electron 
        
    #this is a large installation due to the dependencies on KDE
    - name: Install k4dirstat packages.
      action: apt pkg={{ item }} state=present
      with_items:
        - k4dirstat

    - name: check if media archive path already exists
      stat: path={{ archive_path }}/k4dirstat/
      register: check_archive_path

    - name: create k4dirstat path
      file: path={{ archive_path }}/k4dirstat state=directory mode=0755

    - name: move k4dirstat deb files
      shell: mv /var/cache/apt/archives/*.deb {{ archive_path }}/k4dirstat/
      when: not check_archive_path.stat.exists

    #via https://en.wikipedia.org/wiki/Comparison_of_screencasting_software:
    #https://obsproject.com/download
    #sudo add-apt-repository ppa:obsproject/obs-studio
    - apt_repository:
        repo: "ppa:obsproject/obs-studio"
        state: present
    
    - apt: update_cache=yes
    #sudo apt-get update && sudo apt-get install obs-studio

    - name: Install OBS Studio packages.
      action: apt pkg={{ item }} state=present
      with_items:
        - obs-studio

 
    - name: Install scanner packages.
      action: apt pkg={{ item }} state=present
      with_items:
        - xsane
        - gocr

    - name: check if media archive path already exists
      stat: path={{ archive_path }}/scanner/
      register: check_archive_path

    - name: create scanner path
      file: path={{ archive_path }}/scanner state=directory mode=0755

    - name: move scanner deb files
      shell: mv /var/cache/apt/archives/*.deb {{ archive_path }}/scanner/
      when: not check_archive_path.stat.exists

    # docker notes are stored in docker.yml

        